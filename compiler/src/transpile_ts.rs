<<<<<<< HEAD
<<<<<<< HEAD
pub fn transpile_to_ts() {}
=======
pub fn transpile_ts(_src: &str) -> String {
    "// TS output will be produced in Step 2\nexport default {};".to_string()
}
>>>>>>> origin/pybde0-codex/create-top-level-repo-layout
=======
use crate::ast::{Item, Module};

pub fn emit_ts(m: &Module) -> String {
    let mut out = String::new();
    out.push_str("// Generated by weftc transpile-ts\n");
    out.push_str(&format!("export const moduleName = \"{}\";\n", m.name));
    out.push_str("export const effects = [");
    for (i, e) in m.effects.iter().enumerate() {
        if i > 0 {
            out.push(',');
        }
        out.push_str(&format!("\"{:?}\"", e));
    }
    out.push_str("] as const;\n");

    for it in &m.items {
        match it {
            Item::Actor { name } => out.push_str(&format!("export class {} {{ }}\n", name)),
            Item::Func { name } => out.push_str(&format!("export function {}() {{ }}\n", name)),
        }
    }

    out.push_str(
        r#"
export type DemoCtx = {
  caps: any; now: ()=>number; log: (...a:any[])=>void;
};
export type DemoOpts = { endpoints?: string[]; smv_sec?: number };

export async function run(ctx: DemoCtx, opts: DemoOpts = {}) {
  ctx.log(`[Weft] ${moduleName} â€” effects: ${effects.join(",")}`);
  if (effects.includes("Serial" as any) && ctx.caps?.serial?.readLine) {
    const line = await ctx.caps.serial.readLine();
    ctx.log(`[Weft] serial.readLine -> ${String(line || "")}`);
  }
  if (effects.includes("Net" as any) && ctx.caps?.net?.get) {
    const ep = (opts.endpoints && opts.endpoints[0]) || "https://collector.example/ping";
    const res = await ctx.caps.net.get(ep);
    ctx.log(`[Weft] net.get ${ep} -> ${res?.status ?? 200}`);
  }
  if (effects.includes("Now" as any)) {
    ctx.log(`[Weft] now() -> ${ctx.now()}`);
  }
  if (moduleName.endsWith(".kpi")) {
    const smv = Number(opts.smv_sec ?? 40);
    const target = Math.floor((3600 / smv) * 0.85);
    ctx.log(`[Weft] hourly_target(smv=${smv}) -> ${target}`);
  }
}
"#,
    );

    out
}
>>>>>>> origin/w5t1y7-codex/create-top-level-repo-layout
