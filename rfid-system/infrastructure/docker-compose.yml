version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rfid_postgres
    environment:
      POSTGRES_DB: rfid_tracking
      POSTGRES_USER: rfid_user
      POSTGRES_PASSWORD: rfid_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - rfid_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rfid_user -d rfid_tracking"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: rfid_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rfid_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Supabase Local Development
  supabase:
    image: supabase/supabase-dev
    container_name: rfid_supabase
    ports:
      - "54321:5432"
      - "54322:54322"
      - "54323:54323"
      - "54324:54324"
      - "54325:54325"
    environment:
      POSTGRES_PASSWORD: your-super-secret-and-long-postgres-password
      JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      DASHBOARD_USERNAME: supabase
      DASHBOARD_PASSWORD: this_password_is_insecure_and_should_be_updated
      API_EXTERNAL_URL: http://localhost:54321
      POSTGRES_HOST: postgres
    volumes:
      - supabase_data:/var/lib/postgresql/data
    networks:
      - rfid_network
    depends_on:
      postgres:
        condition: service_healthy

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: rfid_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - rfid_network
    depends_on:
      - postgres
      - redis

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: rfid_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - rfid_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: rfid_grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - rfid_network
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  supabase_data:
  prometheus_data:
  grafana_data:

networks:
  rfid_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16